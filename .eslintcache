[{"/Users/lionel/WebstormProjects/rng/src/App.js":"1","/Users/lionel/WebstormProjects/rng/src/reportWebVitals.js":"2","/Users/lionel/WebstormProjects/rng/src/index.js":"3","/Users/lionel/WebstormProjects/rng/src/components/Odometer.js":"4","/Users/lionel/WebstormProjects/rng/src/components/Picker.js":"5","/Users/lionel/WebstormProjects/rng/src/components/SettingPanel.js":"6","/Users/lionel/WebstormProjects/rng/src/components/Digits.js":"7","/Users/lionel/WebstormProjects/rng/src/components/RandomNumberDisplay.js":"8"},{"size":2245,"mtime":1609590292429,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609466378483,"results":"11","hashOfConfig":"10"},{"size":547,"mtime":1609467387062,"results":"12","hashOfConfig":"10"},{"size":1543,"mtime":1609487405007,"results":"13","hashOfConfig":"10"},{"size":3962,"mtime":1609590975970,"results":"14","hashOfConfig":"10"},{"size":2122,"mtime":1609588989294,"results":"15","hashOfConfig":"10"},{"size":188,"mtime":1609471123955,"results":"16","hashOfConfig":"10"},{"size":1050,"mtime":1609589746169,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"2f2ghs",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lionel/WebstormProjects/rng/src/App.js",["37"],"import React, {useState, useEffect, useRef} from 'react';\nimport './App.scss';\nimport Picker from \"./components/Picker\";\nimport SettingPanel from \"./components/SettingPanel\";\n\nfunction App() {\n\n  const localStorageMin = window.localStorage.getItem('rng-min');\n  const localStorageMax = window.localStorage.getItem('rng-max');\n  const localStorageUnique = window.localStorage.getItem('rng-unique');\n  const [showSettings, setShowSettings] = useState(false);\n  const [min, setMin] = useState(localStorageMin === null ? 1 : localStorageMin * 1);\n  const [max, setMax] = useState(localStorageMax === null ? 50 : localStorageMax * 1);\n  const [unique, setUnique] = useState(localStorageUnique === null ? true : localStorageUnique === '1');\n\n  const pickerRef = useRef();\n\n  const handleSettingsOK = (min, max, unique) => {\n    setMin(min);\n    setMax(max);\n    setUnique(unique);\n    setShowSettings(false);\n    window.localStorage.setItem('rng-min', min);\n    window.localStorage.setItem('rng-max', max);\n    window.localStorage.setItem('rng-unique', unique ? '1' : '0');\n    setTimeout(() => {\n      pickerRef.current.reset();\n    }, 50);\n  };\n\n  const handleSettingsCancel = () => {\n    setShowSettings(false);\n  };\n\n  useEffect(() => {\n  }, [min, max, unique]);\n\n  useEffect(() => {\n    const handleKey = e => {\n      if (e.key === 's') {\n        setShowSettings(!showSettings);\n      } else if (e.key === 'Escape') {\n        setShowSettings(false);\n      }\n    };\n    document.addEventListener('keyup', handleKey);\n    return () => {\n      document.removeEventListener('keyup', handleKey);\n    };\n  }, []);\n\n  return <div className=\"App\">\n      {showSettings && <SettingPanel min={min} max={max} unique={unique} onOK={handleSettingsOK} onCancel={handleSettingsCancel} />}\n      <div className={\"main\"}>\n        <Picker min={min} max={max} unique={unique} ref={pickerRef} />\n      </div>\n      <div className={\"app-footer\"}>\n        <div className={\"instruction\"}>\n          Click number or hit space bar to generate new number.\n        </div>\n        <div className={\"actions\"}>\n          <button className={\"btn btn-text\"} onClick={() => setShowSettings(true)}>[Settings]</button>\n        </div>\n      </div>\n    </div>;\n}\n\nexport default App;\n","/Users/lionel/WebstormProjects/rng/src/reportWebVitals.js",[],"/Users/lionel/WebstormProjects/rng/src/index.js",[],["38","39"],"/Users/lionel/WebstormProjects/rng/src/components/Odometer.js",["40"],"import React, {useState, useEffect} from 'react';\nimport './Odometer.scss';\nimport Digits from \"./Digits\";\n\nconst Odometer = ({number, digits = 2, transformSpeed = 600, onStopCounting}) => {\n\n  const [currentNumber, setCurrentNumber] = useState(number);\n  const [speed, setSpeed] = useState(transformSpeed);\n  const [step, setStep] = useState(1);\n  const [counting, setCounting] = useState(false);\n\n  useEffect(() => {\n    let a = null;\n    if (number !== null && number !== currentNumber) {\n      const distance = Math.abs(currentNumber - number);\n      setStep(Math.floor(Math.max(1, distance / 40)));\n      a = setTimeout(() => {\n        setCurrentNumber(currentNumber + (currentNumber > number ? -step : step));\n      }, speed);\n    } else {\n      onStopCounting();\n    }\n    setCounting(number !== null && number !== currentNumber);\n    return () => {\n      clearInterval(a);\n    };\n  }, [step, number, currentNumber, speed, onStopCounting]);\n\n  useEffect(() => {\n    if (number !== null) {\n      if (currentNumber !== number) {\n        // Whenever the number changes, we set the counting interval\n        setSpeed(transformSpeed / Math.abs(currentNumber - number));\n      }\n    } else {\n      setCurrentNumber(0);\n    }\n  }, [number]);\n\n  // split the digits\n  const numbers = (\"\" + currentNumber).padStart(digits, '0').split('');\n\n  return <div className={\"Odometer\" + (counting ? ' counting' : '')}>\n    {number === null ? <Digits n={\"-\"} /> : numbers.map((n, i) => <Digits key={i} n={n * 1} />)}\n  </div>;\n};\n\nexport default Odometer;","/Users/lionel/WebstormProjects/rng/src/components/Picker.js",["41","42"],"/Users/lionel/WebstormProjects/rng/src/components/SettingPanel.js",[],"/Users/lionel/WebstormProjects/rng/src/components/Digits.js",[],"/Users/lionel/WebstormProjects/rng/src/components/RandomNumberDisplay.js",["43"],{"ruleId":"44","severity":1,"message":"45","line":50,"column":6,"nodeType":"46","endLine":50,"endColumn":8,"suggestions":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"44","severity":1,"message":"52","line":38,"column":6,"nodeType":"46","endLine":38,"endColumn":14,"suggestions":"53"},{"ruleId":"44","severity":1,"message":"54","line":83,"column":6,"nodeType":"46","endLine":83,"endColumn":8,"suggestions":"55"},{"ruleId":"44","severity":1,"message":"56","line":108,"column":6,"nodeType":"46","endLine":108,"endColumn":21,"suggestions":"57"},{"ruleId":"44","severity":1,"message":"58","line":27,"column":6,"nodeType":"46","endLine":27,"endColumn":19,"suggestions":"59"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showSettings'. Either include it or remove the dependency array. You can also do a functional update 'setShowSettings(s => ...)' if you only need 'showSettings' in the 'setShowSettings' call.","ArrayExpression",["60"],"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"React Hook useEffect has missing dependencies: 'currentNumber' and 'transformSpeed'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSpeed' needs the current value of 'currentNumber'.",["63"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["64"],"React Hook useEffect has missing dependencies: 'handleReset', 'handleStartSelecting', and 'handleStopSelecting'. Either include them or remove the dependency array.",["65"],"React Hook useEffect has missing dependencies: 'digits', 'max', and 'min'. Either include them or remove the dependency array.",["66"],{"desc":"67","fix":"68"},"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [showSettings]",{"range":"77","text":"78"},"Update the dependencies array to be: [currentNumber, number, transformSpeed]",{"range":"79","text":"80"},"Update the dependencies array to be: [reset]",{"range":"81","text":"82"},"Update the dependencies array to be: [generate, handleReset, handleStartSelecting, handleStopSelecting, run]",{"range":"83","text":"84"},"Update the dependencies array to be: [run, number, max, min, digits]",{"range":"85","text":"86"},[1602,1604],"[showSettings]",[1231,1239],"[currentNumber, number, transformSpeed]",[2297,2299],"[reset]",[3016,3031],"[generate, handleReset, handleStartSelecting, handleStopSelecting, run]",[742,755],"[run, number, max, min, digits]"]