{"version":3,"sources":["Digits.js","Odometer.js","Picker.js","SettingPanel.js","App.js","reportWebVitals.js","index.js"],"names":["Digits","n","className","Odometer","number","digits","transformSpeed","onStopCounting","useState","currentNumber","setCurrentNumber","speed","setSpeed","step","setStep","counting","setCounting","useEffect","a","distance","Math","abs","floor","max","setTimeout","clearInterval","numbers","padStart","split","map","i","Picker","min","generate","newNumber","random","setNumber","handleKeydown","e","keyCode","document","addEventListener","removeEventListener","log10","onClick","SettingPanel","props","onOK","onCancel","setMin","setMax","valid","type","value","onChange","target","replace","disabled","App","localStorageMin","window","localStorage","getItem","localStorageMax","showSettings","setShowSettings","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.836b5bfe.chunk.js","sourcesContent":["import React from 'react';\nimport './Digits.scss';\n\nconst Digits = ({n}) => {\n  return <div className={\"Digits\"}>\n    <div className={\"digit\"}>{n}</div>\n  </div>\n};\n\nexport default Digits;","import React, {useState, useEffect} from 'react';\nimport './Odometer.scss';\nimport Digits from \"./Digits\";\n\nconst Odometer = ({number, digits = 2, transformSpeed = 600, onStopCounting}) => {\n\n  const [currentNumber, setCurrentNumber] = useState(number);\n  const [speed, setSpeed] = useState(transformSpeed);\n  const [step, setStep] = useState(1);\n  const [counting, setCounting] = useState(false);\n\n  useEffect(() => {\n    let a = null;\n    if (number !== currentNumber) {\n      const distance = Math.abs(currentNumber - number);\n      setStep(Math.floor(Math.max(1, distance / 40)));\n      a = setTimeout(() => {\n        setCurrentNumber(currentNumber + (currentNumber > number ? -step : step));\n      }, speed);\n    } else {\n      onStopCounting();\n    }\n    setCounting(number !== currentNumber);\n    return () => {\n      clearInterval(a);\n    };\n  }, [step, number, currentNumber, speed]);\n\n  useEffect(() => {\n    if (currentNumber !== number) {\n      // Whenever the number changes, we set the counting interval\n      setSpeed(transformSpeed / Math.abs(currentNumber - number));\n    }\n  }, [number]);\n\n  // split the digits\n  const numbers = (\"\" + currentNumber).padStart(digits, '0').split('');\n\n  return <div className={\"Odometer\" + (counting ? ' counting' : '')}>\n    {numbers.map((n, i) => <Digits key={i} n={n * 1} />)}\n  </div>;\n};\n\nexport default Odometer;","import React, {useState, useEffect} from 'react';\nimport './Picker.scss';\nimport Odometer from \"./Odometer\";\n\nconst Picker = ({\n  min, max\n}) => {\n\n  const [counting, setCounting] = useState(false);\n\n  const generate = () => {\n    let newNumber = number;\n    // ensuring the number keep changing\n    do {\n      newNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n    } while(number === newNumber);\n    return newNumber;\n  };\n\n  const [number, setNumber] = useState(0);\n\n  // reset whenever number changed.\n  useEffect(() => {\n    setNumber(0);\n  }, [min, max]);\n\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.keyCode === 32) {\n        if (!counting) {\n          setCounting(true);\n          setNumber(generate);\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown)\n    };\n  }, [counting, min, max]);\n\n  const handlePickOne = () => {\n    if (!counting) {\n      setCounting(true);\n      setNumber(generate());\n    }\n  };\n\n  const handleOdometerStopCounting = () => {\n    setCounting(false);\n  };\n\n  const digits = Math.floor(Math.log10(max) + 1);\n\n  return <div className={\"Picker\"} onClick={handlePickOne}>\n    <Odometer number={number} digits={digits} onStopCounting={handleOdometerStopCounting} />\n    <div className={\"range\"}>[{min}, {max}]</div>\n  </div>\n}\n\nexport default Picker;","import React, {useState} from 'react';\nimport './SettingPanel.scss';\n\nconst SettingPanel = props => {\n\n  const {onOK, onCancel} = props;\n\n  const [min, setMin] = useState(props.min);\n  const [max, setMax] = useState(props.max);\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  const handleOK = () => {\n    onOK(min * 1, max * 1);\n  };\n\n  const handleMinChange = e => {\n    setMin(e.target.value.replace(/[^\\d]/g, '') * 1);\n  };\n\n  const handleMaxChange = e => {\n    setMax(e.target.value.replace(/[^\\d]/g, '') * 1);\n  };\n\n  // min/max must not be same\n  const valid = min >= 0 && min < max;\n\n  return <div className={\"SettingPanel\"}>\n    <div className={\"overlay\"}>\n      <div className={\"box\"}>\n        <div className={\"header\"}>\n          Settings\n        </div>\n        <div className={\"body\"}>\n          <div className={\"settings\"}>\n            <div className={\"instruction\"}>\n              You can set the minimum and maximum number of the generator. Numbers are inclusive.\n            </div>\n            <div className={\"setting\"}>\n              <div className={\"lbl\"}>Minimum number</div>\n              <div className={\"val\"}>\n                <input type={\"text\"} value={min} onChange={handleMinChange} className={\"form-control\"} />\n              </div>\n            </div>\n            <div className={\"setting\"}>\n              <div className={\"lbl\"}>Maximum number</div>\n              <div className={\"val\"}>\n                <input type={\"text\"} value={max} onChange={handleMaxChange} className={\"form-control\"} />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={\"actions\"}>\n          <button className={\"btn btn-secondary\"} onClick={handleCancel}>Cancel</button>\n          <button className={\"btn btn-primary\"} onClick={handleOK} disabled={!valid}>OK</button>\n        </div>\n      </div>\n    </div>\n  </div>\n};\n\nexport default SettingPanel;","import React, {useState} from 'react';\nimport './App.scss';\nimport Picker from \"./Picker\";\nimport SettingPanel from \"./SettingPanel\";\n\nfunction App() {\n\n  const localStorageMin = window.localStorage.getItem('rng-min');\n  const localStorageMax = window.localStorage.getItem('rng-max');\n  const [showSettings, setShowSettings] = useState(false);\n  const [min, setMin] = useState(localStorageMin === null ? 1 : localStorageMin * 1);\n  const [max, setMax] = useState(localStorageMax === null ? 50 : localStorageMax * 1);\n\n  const handleSettingsOK = (min, max) => {\n    setMin(min);\n    setMax(max);\n    setShowSettings(false);\n    window.localStorage.setItem('rng-min', min);\n    window.localStorage.setItem('rng-max', max);\n  };\n\n  const handleSettingsCancel = () => {\n    setShowSettings(false);\n  };\n\n  return <div className=\"App\">\n      {showSettings && <SettingPanel min={min} max={max} onOK={handleSettingsOK} onCancel={handleSettingsCancel} />}\n      <Picker min={min}\n              max={max} />\n      <div className={\"page-instruction\"}>\n        Click on the number or hit the space bar to generate a new number.\n      </div>\n      <div className={\"settings\"}>\n        <button className={\"btn btn-text\"} onClick={() => setShowSettings(true)}>Change Range</button>\n      </div>\n    </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}